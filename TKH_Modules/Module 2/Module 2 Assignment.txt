1.) Explain in your own words what is an operating system (300 words).
An operating system is the program that provides an interface that allows the user to interact with the computer hardware. It serves as the core that executes important functions such as determining what process got the processor and for how much time using process scheduling, providing an organized file structure for easy navigation and usage, allow communication between various computer devices via their respective drivers, primary/Main memory management, prevents unauthorized access to programs and data through the use of passwords, accounting for time and resources used by various jobs and users, error detecting through production of dumps, traces, error messages and other debugging aids, control over system performance and coordination between other software and users among others. Some of the widely known and used operating system include:
-	Linux operating system - designed using the UNIX operating system, its open source and free to use
-	MAC operating system - also designed using the UNIX operating system. This is a proprietary OS developed my Apple Inc for sole use on its devices.
-	Windows operating systems - another proprietary OS developed my Microsoft to be used on Microsoft devices.
Other OS include VMS, OS/400, AIX, z/OS, etc.
OS can also be designed for a specific purpose/devices, the types of OS include.
I.	Batch Operating System: user input is done through devices like punch cards, there is no direct user interaction
II.	Times - Sharing Operating systems: this OS is designed to effectively maximize response times while allowing multiple users on various terminal to use a particular computer at same time.
III.	Distributed operating system: this OS is designed to manage multiple central processors to serve multiple real-time applications and users.
IV.	Network Operating system: Design for use on servers, functions include managing data, user groups, security, applications, and other network applications.
V.	Real time operating system: available in types; Hard real-time operating systems which guarantee's critical task are completed on time. Soft real-time systems which are less restrictive and have less utility that hard real-time systems, critical work are given priority over other tasks and retain priority until complete.


2.) Describe the type of Operating systems (200 words).
-Batch Operating System: user input is done through devices like punch cards, there is no direct user interaction. As the computer operator needs to sort out the jobs based on similarities before having it processed, it is very difficult to guess or know the time required for any job to complete. Processors of the batch systems know how long the job would be when it is in queue, multiple users can share the batch systems, etc. Some known cons are computer operators need to be well known with batch systems, batch systems are hard to debug, system can be sometimes costly, etc. Examples of Batch based Operating System: Payroll System, Bank Statements, etc. 
-Times - Sharing Operating systems: this OS is designed to effectively maximize response times while allowing multiple users on various terminal to use a particular computer at same time. This OS reduces CPU idle time as each task is scheduled appropriate, fewer chances of duplicate software. This OS has also seen problems with data communication, questions of security and integrity of user’s data and programs and reliability issue.

-Distributed operating system: this OS is designed to manage multiple central processors to serve multiple real-time applications and users. This always for various autonomous interconnected computers to communicate with each other using a shared communication network. This OS always for easy share of resources across or from other locations. Since this network is made up from autonomous computers, failure one network will not affect the others. This system also for easy scalability, loads on computer reduces as it is shared across the network. Though failure on the main network will stop the entire communication, given the complex nature of this system it is not readily available as they are very expensive, etc. Examples included LOCUS, etc.

-Network Operating system: Design for use on servers, functions include managing data, user groups, security, applications, and other network applications. The computers in this system are known as tightly coupled systems as all users are aware of the underlying configuration, of all other users within the network, their individual connections, etc. Advantages including highly stable centralized server, security concerns are handled through servers, etc. Disadvantages are high cost of buying and running a server, servers are high cost. examples of this including Microsoft Windows Server 2003 2008/2012/2016/2019, UNIX, Linux, Mac OS X, etc.

-Real time operating system: available in types; Hard real-time operating systems which guarantee's critical task are completed on time. Soft real-time systems which are less restrictive and have less utility that hard real-time systems, critical work are given priority over other tasks and retain priority until complete. Advantages include maximum utilization of device resource, focus on running on applications, error free systems, etc. Disadvantages are, it’s made up of complex algorithm, that make is difficult for designer to write on, thread priority, very resource intensive etc. Examples include Scientific experiments, medical imaging systems, industrial control systems, etc.


3.) Explain : what are the services of an OS subsystem ( 250 words).
communication I/O devices, this is how the CPU passes information to and from an I/O devices. communications between CPU and devices are done in three ways. Special instructions I/O: these instruction from the CPU is made to control I/O devices, that allows data to be read and sent to and from CPU to I/O devices. Direct memory access (DMA): To reduce overhead on request from 2 or more devices given that some devices generate interrupt faster than others, computers use a hardware called direct memory access controller hardware. This means the CPU grants I/O modules the authority to read/write to memory without involvement. This allows CPU to only be involved at the beginning and interrupt only after the entire block have been transferred. Memory-mapped I/O: this allows for same share space between memory and I/O devices to allow transfer of data block to/from memory without the CPU. Polling vs Interrupt I/O : Detection of arrival of an input in a computer is detected generally 2 ways, polling and interrupts. Allows the processor to deal with any events happening that is not related to the cut.
USER-SPACE I/O SOFTWARE: The basic function of the device-independent software is to perform the I/O functions that are common to all devices and to provide a uniform interface to the user-level software. Though it is difficult to write completely device independent software, but we can write some modules which are common among all the devices.
Kernel i/o subsystem: Handles many important services including Scheduling − Kernel schedules a set of I/O requests to determine a good order in which to execute them. Buffering − Kernel I/O Subsystem maintains a memory area known as buffer that stores data while they are transferred between two devices or between a device with an application operation. Caching − Kernel maintains cache memory which is region of fast memory that holds copies of data. Access to the cached copy is more efficient than access to the original. Spooling and Device Reservation − A spool is a buffer that holds output for a device, such as a printer, that cannot accept interleaved data streams. Error Handling − An operating system that uses protected memory can guard against many kinds of hardware and application errors.
 


4.)Explain portability in your own words (250 words).
Portability means software can work on an operating system other than the one in which it was created without requiring major rework. This meant when moving an application program to another operating system, a computer software application is considered portable if the effort required to adapt it to the new environment or just across platforms is within reasonable limits. The phrase "to port" means to be able modify software and make it adaptable to work on a different computer system. An example, making modification to an application made for a Microsoft OS so that it can be run in a Linux environment.  Portability comes with stability, cause users are able to monitor the behaviors of the software on some platforms, as they will not want to waste time addressing environment related issues. Seeing major changes over worse software crash just cause you moved to a new platform. This feature allows for reaching a wider audience, as there a many hardware and software platforms; it is not only the Linux/Windows world. More users mean increased profit for the producer of the software. Developers making software always keep this feature in mind as they will like their software to be used by everybody regardless of the platform, they choose to use it on. Portability has been a game changer cause this does not force programmers to have to recode all their software for a specific OS or platform or also allow space for the platform makers to allow third party developer to easily build on their platform. 


5.) Explain network topology. (250 words).
Network topology : refers to the manner in which devices (nodes) on a network are arranged to relate to each other. Topologies are categorized as either physical network topology - defining the placement of the various components of a network and how data ia transmitted through the interconnected wires and cables between, or logical network topology - which refers to the mechanism that defines how data communicates through the nodes on the network, independent of physical connection between these nodes. Logical topology deals with network protocols that are used to control the data flow, twisted pair Ethernet, which is categorized as a logical bus topology, and token ring as a logical ring topology. It helps to design the initial structure of the network and if any change is where it can be done before implementing the network physically. Physical network topology examples include star, mesh, tree, ring, point-to-point, circular, hybrid, and bus topology networks, each consisting of different configurations of nodes and links. The ideal network topology depends on each business’s size, scale, goals, and budget. A network topology diagram is a visual representation of a network’s devices, connections, and paths, allowing you to picture how devices are interconnected and how they communicate with one another. The layout of a network has a direct impact on network functionality. Selecting the right topology can improve performance and data efficiency, optimize allocation of resources, and reduce operational costs. Software-created network topology diagrams are important references for diagnosing network connectivity problems, investigating network slowdowns, and generally troubleshooting issues.